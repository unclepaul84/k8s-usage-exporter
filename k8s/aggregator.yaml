apiVersion: v1
kind: Secret
metadata:
  name: minio-credentials
  namespace: kube-system
type: Opaque
data:
  # Base64 encoded values:
  # echo -n "minio" | base64 = bWluaW8=
  # echo -n "minio123" | base64 = bWluaW8xMjM=
  access-key: bWluaW8=
  secret-key: bWluaW8xMjM=
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aggregator
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aggregator
  template:
    metadata:
      labels:
        app: aggregator
    spec:
      serviceAccountName: aggregator-sa
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: aggregator
        image: localhost:5000/aggregator
        imagePullPolicy: Always
        ports:
        - containerPort: 8888
        env:
        - name: CLUSTER_ID
          value: "sample-cluster-01"
        - name: S3_BUCKET
          value: "warehouse"  # MinIO bucket from iceberg config
        - name: S3_PREFIX
          value: "k8s-metrics/{cluster_name}/{date}/"
        - name: AWS_REGION
          value: "us-east-1"
        - name: AWS_ENDPOINT_URL
          value: "http://localhost:9000"  # MinIO endpoint from iceberg config
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: minio-credentials
              key: access-key
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: minio-credentials
              key: secret-key
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: aggregator
  namespace: kube-system
spec:
  selector:
    app: aggregator
  ports:
  - port: 8888
    targetPort: 8888
    protocol: TCP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: aggregator-sa
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: aggregator-role
rules:
- apiGroups: [""]
  resources: ["pods", "nodes", "persistentvolumes", "persistentvolumeclaims", "namespaces"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: aggregator-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: aggregator-role
subjects:
- kind: ServiceAccount
  name: aggregator-sa
  namespace: kube-system