version: '3.8'
services:
  minio:
    image: minio/minio
    networks:
      iceberg_net:
        aliases:
          - warehouse.minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
      MINIO_DOMAIN: minio
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Create required buckets in MinIO
  minio-init:
    image: minio/mc
    networks:
      iceberg_net:
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      mc alias set minio http://minio:9000 minio minio123;
      mc mb minio/warehouse --ignore-existing;
      mc policy set public minio/warehouse;
      echo 'Buckets created successfully';
      "

  postgres:
    image: postgres:13
    networks:
      iceberg_net:
    environment:
      POSTGRES_DB: iceberg_catalog
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data

  iceberg-rest:
    image: tabulario/iceberg-rest:latest
    ports:
      - "8181:8181"
    networks:
      iceberg_net:
    environment:
      CATALOG_URI: jdbc:postgresql://postgres:5432/iceberg_catalog
      CATALOG_USER: user
      CATALOG_PASSWORD: password
      CATALOG_WAREHOUSE: s3://warehouse/
      CATALOG_IO__IMPL: org.apache.iceberg.aws.s3.S3FileIO
      CATALOG_S3_ENDPOINT: http://minio:9000
      CATALOG_S3_PATH_STYLE_ACCESS: true
      CATALOG_S3_ACCESS_KEY_ID: minio
      CATALOG_S3_SECRET_ACCESS_KEY: minio123
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: minio123
      AWS_REGION: us-east-1
      JAVA_OPTS: "-Daws.region=us-east-1 -Dcom.amazonaws.services.s3.enableV4=true -Dcom.amazonaws.services.s3.pathStyleAccess=true"

    depends_on:
        minio:
          condition: service_healthy
        postgres:
          condition: service_started
        minio-init:
          condition: service_completed_successfully

  presto:
    image: prestodb/presto
    networks:
      iceberg_net:
    ports:
      - "8080:8080"
    volumes:
      - ./cfg/iceberg.properties:/opt/presto-server/etc/catalog/iceberg.properties:ro
    depends_on:
      - iceberg-rest

  iceberg-attacher:
    build: .
    networks:
      iceberg_net:
    environment:
      ICEBERG_CATALOG_URI: http://iceberg-rest:8181
      S3_ENDPOINT_URL: http://minio:9000
      S3_ACCESS_KEY_ID: minio
      S3_SECRET_ACCESS_KEY: minio123
      S3_BUCKET: warehouse
      METRICS_BUCKET: warehouse
      WAREHOUSE_PATH: s3://warehouse/
      ICEBERG_NAMESPACE: k8s_metrics
      ICEBERG_TABLE_NAME: pod_usage_metrics
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: minio123
      AWS_REGION: us-east-1
    depends_on:
      iceberg-rest:
        condition: service_started
      minio-init:
        condition: service_completed_successfully
    # Override command to keep container running for manual execution
    command: tail -f /dev/null

volumes:
  minio_data:
  postgres_data:
networks:
  iceberg_net: